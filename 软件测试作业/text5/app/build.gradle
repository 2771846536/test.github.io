/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id "info.solidsoft.pitest" version "1.7.4"
    id "com.github.spotbugs" version "$spotbugspluginVersion"
}
pitest {
    targetClasses = ['test5.*']
    threads = 4
    outputFormats = ['HTML']
    timestampedReports = true
    junit5PluginVersion = '0.15'
}
repositories {
 mavenLocal()
 maven{url 'https://maven.aliyun.com/repository/public'}
 // Use Maven Central for resolving dependencies.
 mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
    spotbugsPlugins "com.h3xstream.findsecbugs:findsecbugs-plugin:$findsecbugspluginVersion"
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.8.1')
        }
    }
}

application {
    // Define the main class for the application.
    mainClass = 'test1.test1'
}
spotbugs {
    toolVersion = "$spotbugsVersion"
    ignoreFailures = false
    showStackTraces = true
    showProgress = true
    effort = 'default'
    reportLevel = 'low'
    reportsDir = file("$buildDir/reports/spotbugs")
    maxHeapSize = '2g'
    extraArgs = [ '-nested:false' ]
    jvmArgs = [ '-Duser.language=en' ]
}

spotbugsTest {
    reports {
        html {
            stylesheet = 'fancy-hist.xsl'
        }
    }
}

spotbugsMain {
    reports {
        html {
            stylesheet = 'fancy-hist.xsl'
        }
    }
}

tasks.withType(JavaCompile){
    options.encoding("utf-8")
}

apply from: "$rootDir/gradle/config/scripts/style.gradle"
apply from: "$rootDir/gradle/config/scripts/coverage.gradle"
coverage.excludePackages = [
]
coverage.excludeClasses = [
]
style.excludePackages = [
]
style.excludeClasses = [
]


